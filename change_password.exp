#!/usr/bin/expect -f
# This Expect script automates the password change process

set timeout 120
exp_internal 1
log_file /tmp/expect_debug.log

# Set terminal type to dumb to prevent ANSI codes (optional)
set env(TERM) "dumb"

# Retrieve arguments
set host [lindex $argv 0]
set user [lindex $argv 1]
set initial_password [lindex $argv 2]
set new_password [lindex $argv 3]

# Start SSH session
spawn ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $user@$host

# Handle initial password prompt
expect {
    -re {.*[Pp]assword:.*} {
        send "$initial_password\r"
    }
    timeout {
        puts "Error: SSH connection timed out."
        exit 1
    }
}

# Handle any motd or login banners until we get to the Shape prompt
expect {
    -re {(\x1B\[.*?m)*Shape.*-> } {
        send "run bash\r"
    }
    timeout {
        puts "Error: Did not receive Shape CLI prompt."
        exit 1
    }
}

# Handle the password prompt after 'run bash'
expect {
    -re {Please input the password for user '.*'} {
        send "$initial_password\r"
    }
    timeout {
        puts "Error: Did not receive password prompt after 'run bash'."
        exit 1
    }
}

# Wait for bash shell prompt
expect {
    -re {\[.*@.*\][#$] } {
        # First attempt to change password
        send "passwd\r"
    }
    timeout {
        puts "Error: Did not reach bash shell prompt."
        exit 1
    }
}

# Handle password change process
expect {
    -re {(current )?UNIX password:} {
        send "$initial_password\r"
        exp_continue
    }
    "passwd: Authentication token manipulation error" {
        # Retry changing password if first attempt failed
        send "passwd\r"
        exp_continue
    }
    "New password:" {
        send "$new_password\r"
        exp_continue
    }
    "Retype new password:" {
        send "$new_password\r"
        exp_continue
    }
    "BAD PASSWORD.*" {
        send "$new_password\r"
        exp_continue
    }
    "passwd: all authentication tokens updated successfully." {
        # Password change successful
        send "exit\r"
    }
    timeout {
        puts "Error: Password change process timed out."
        exit 1
    }
}

# Exit bash shell
expect {
    -re {\[.*@.*\][#$] } {
        send "exit\r"
    }
    timeout {
        puts "Error: Did not return to bash shell prompt after password change."
        exit 1
    }
}

# Close SSH session
expect eof
exit 0
